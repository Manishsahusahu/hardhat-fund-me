{
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "addressToAmountFunders",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "funders",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "i_owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "priceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0xcdfa1a77e29595a4b08d928636d0689a4f667716aee7401f65fd65b70e11668c",
    "receipt": {
        "to": null,
        "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
        "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "transactionIndex": 0,
        "gasUsed": "1003513",
        "logsBloom": "0x
        "blockHash": "0x8eaeb277c2e4f09bf2c26cfc378c176670466cf13c6f8ddbb676456a5baf3b70",
        "transactionHash": "0xcdfa1a77e29595a4b08d928636d0689a4f667716aee7401f65fd65b70e11668c",
        "logs": [],
        "blockNumber": 2,
        "cumulativeGasUsed": "1003513",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x5FbDB2315678afecb367f032d93F642f64180aa3"],
    "numDeployments": 1,
    "solcInputHash": "145eadf971b5a6aef215e997ea15016b",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Manish Sahu\",\"details\":\"This implements price feeds as library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to show demo for collect crowd funding\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// prgma\\npragma solidity ^0.8.8;\\n\\n//imports\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n//error\\nerror FundMe__NotOwner();\\n\\n//library, interfaces, contracts\\n\\n/**\\n * @title A contract for crowd funding\\n * @author Manish Sahu\\n * @notice This contract is to show demo for collect crowd funding\\n * @dev This implements price feeds as library\\n */\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 5 * 10**18; // constant variables saves the gas.\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunders;\\n    AggregatorV3Interface public priceFeed;\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Did't send enough!\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunders[msg.sender] = msg.value;\\n    }\\n\\n    address public immutable i_owner;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 fundersIndex = 0;\\n            fundersIndex < funders.length;\\n            fundersIndex++\\n        ) {\\n            addressToAmountFunders[funders[fundersIndex]] = 0; // set 0 funded value for everyone.\\n        }\\n        // sending the balance to funder.\\n        //transfer method: returns error if transaction failed.\\n        // payable(msg.sender).transfer(address(this).balance); // payable(msg.sender) is used for payable address in solidity.\\n        //send method: returns bool if failed.\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n        funders = new address[](0); // set the funders array refreshly with 0 objects.\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory m_funders = funders;\\n        for (\\n            uint256 fundersIndex = 0;\\n            fundersIndex < m_funders.length;\\n            fundersIndex++\\n        ) {\\n            addressToAmountFunders[m_funders[fundersIndex]] = 0; // set 0 funded value for everyone.\\n        }\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n        funders = new address[](0); // set the funders array refreshly with 0 objects.\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(i_owner == msg.sender, \\\"Sender is not the owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    // if somebody by mistake sends the ETH without calling the fund function.\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x2817511a98616d89d9010e7698d61468f10f325662314bf6fb04665876ee1aa8\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        // ABI\\n        // ADDRESS 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e is the address of contract ETH to USD.\\n        (, int256 price, , , ) = priceFeed.latestRoundData(); // will return the price into USD.\\n        return uint256(price * 1e10); // because contract will get ether in 1e18 manner(18 decimal zeroes) and price variable will recieve the data in 8 decimal zeroes, so to match them we have to multiply price with 1e10.\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        return ((ethPrice * ethAmount) / 1e18);\\n    }\\n}\\n\",\"keccak256\":\"0xc43bbb491e4cb11277a16d72508b565c5c4d8a9bb900bbcfd81ed9286f2eb4f9\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b506040516200124938038062001249833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110ca6200017f600039600081816102f501528181610579015261081701526110ca6000f3fe60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610142578063be2693f01461014c578063dba6335f14610163578063dc0d3dff1461018e5761008e565b80633ccfd60b146100985780636b69a592146100af578063741bef1a146100da578063ac3e43c0146101055761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad6102f3565b005b3480156100bb57600080fd5b506100c461052d565b6040516100d19190610a0e565b60405180910390f35b3480156100e657600080fd5b506100ef610539565b6040516100fc9190610aa8565b60405180910390f35b34801561011157600080fd5b5061012c60048036038101906101279190610b06565b61055f565b6040516101399190610a0e565b60405180910390f35b61014a6101cb565b005b34801561015857600080fd5b50610161610577565b005b34801561016f57600080fd5b50610178610815565b6040516101859190610b42565b60405180910390f35b34801561019a57600080fd5b506101b560048036038101906101b09190610b89565b610839565b6040516101c29190610b42565b60405180910390f35b674563918244f40000610209600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461087890919063ffffffff16565b101561024a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024190610c13565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610378576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041d576000600160008084815481106103a1576103a0610c33565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061041590610c91565b91505061037b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161044490610d0b565b60006040518083038185875af1925050503d8060008114610481576040519150601f19603f3d011682016040523d82523d6000602084013e610486565b606091505b50509050806104ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c190610d6c565b60405180910390fd5b600067ffffffffffffffff8111156104e5576104e4610d8c565b5b6040519080825280602002602001820160405280156105135781602001602082028036833780820191505090505b506000908051906020019061052992919061094e565b5050565b674563918244f4000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105fc576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561067f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610635575b5050505050905060005b8151811015610704576000600160008484815181106106ab576106aa610c33565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806106fc90610c91565b915050610689565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161072b90610d0b565b60006040518083038185875af1925050503d8060008114610768576040519150601f19603f3d011682016040523d82523d6000602084013e61076d565b606091505b50509050806107b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a890610d6c565b60405180910390fd5b600067ffffffffffffffff8111156107cc576107cb610d8c565b5b6040519080825280602002602001820160405280156107fa5781602001602082028036833780820191505090505b506000908051906020019061081092919061094e565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061084957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610884836108ae565b9050670de0b6b3a7640000848261089b9190610dbb565b6108a59190610e44565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108f757600080fd5b505afa15801561090b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092f9190610f02565b5050509150506402540be400816109469190610f7d565b915050919050565b8280548282559060005260206000209081019282156109c7579160200282015b828111156109c65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061096e565b5b5090506109d491906109d8565b5090565b5b808211156109f15760008160009055506001016109d9565b5090565b6000819050919050565b610a08816109f5565b82525050565b6000602082019050610a2360008301846109ff565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a6e610a69610a6484610a29565b610a49565b610a29565b9050919050565b6000610a8082610a53565b9050919050565b6000610a9282610a75565b9050919050565b610aa281610a87565b82525050565b6000602082019050610abd6000830184610a99565b92915050565b600080fd5b6000610ad382610a29565b9050919050565b610ae381610ac8565b8114610aee57600080fd5b50565b600081359050610b0081610ada565b92915050565b600060208284031215610b1c57610b1b610ac3565b5b6000610b2a84828501610af1565b91505092915050565b610b3c81610ac8565b82525050565b6000602082019050610b576000830184610b33565b92915050565b610b66816109f5565b8114610b7157600080fd5b50565b600081359050610b8381610b5d565b92915050565b600060208284031215610b9f57610b9e610ac3565b5b6000610bad84828501610b74565b91505092915050565b600082825260208201905092915050565b7f44696427742073656e6420656e6f756768210000000000000000000000000000600082015250565b6000610bfd601283610bb6565b9150610c0882610bc7565b602082019050919050565b60006020820190508181036000830152610c2c81610bf0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c9c826109f5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ccf57610cce610c62565b5b600182019050919050565b600081905092915050565b50565b6000610cf5600083610cda565b9150610d0082610ce5565b600082019050919050565b6000610d1682610ce8565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d56600b83610bb6565b9150610d6182610d20565b602082019050919050565b60006020820190508181036000830152610d8581610d49565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000610dc6826109f5565b9150610dd1836109f5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e0a57610e09610c62565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e4f826109f5565b9150610e5a836109f5565b925082610e6a57610e69610e15565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e9481610e75565b8114610e9f57600080fd5b50565b600081519050610eb181610e8b565b92915050565b6000819050919050565b610eca81610eb7565b8114610ed557600080fd5b50565b600081519050610ee781610ec1565b92915050565b600081519050610efc81610b5d565b92915050565b600080600080600060a08688031215610f1e57610f1d610ac3565b5b6000610f2c88828901610ea2565b9550506020610f3d88828901610ed8565b9450506040610f4e88828901610eed565b9350506060610f5f88828901610eed565b9250506080610f7088828901610ea2565b9150509295509295909350565b6000610f8882610eb7565b9150610f9383610eb7565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fd257610fd1610c62565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561100f5761100e610c62565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561104c5761104b610c62565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561108957611088610c62565b5b82820290509291505056fea2646970667358221220103aef113742ec959484155372ed638317affc36b6619d32a638b0469750385864736f6c63430008080033",
    "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610142578063be2693f01461014c578063dba6335f14610163578063dc0d3dff1461018e5761008e565b80633ccfd60b146100985780636b69a592146100af578063741bef1a146100da578063ac3e43c0146101055761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad6102f3565b005b3480156100bb57600080fd5b506100c461052d565b6040516100d19190610a0e565b60405180910390f35b3480156100e657600080fd5b506100ef610539565b6040516100fc9190610aa8565b60405180910390f35b34801561011157600080fd5b5061012c60048036038101906101279190610b06565b61055f565b6040516101399190610a0e565b60405180910390f35b61014a6101cb565b005b34801561015857600080fd5b50610161610577565b005b34801561016f57600080fd5b50610178610815565b6040516101859190610b42565b60405180910390f35b34801561019a57600080fd5b506101b560048036038101906101b09190610b89565b610839565b6040516101c29190610b42565b60405180910390f35b674563918244f40000610209600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461087890919063ffffffff16565b101561024a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024190610c13565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610378576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041d576000600160008084815481106103a1576103a0610c33565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061041590610c91565b91505061037b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161044490610d0b565b60006040518083038185875af1925050503d8060008114610481576040519150601f19603f3d011682016040523d82523d6000602084013e610486565b606091505b50509050806104ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c190610d6c565b60405180910390fd5b600067ffffffffffffffff8111156104e5576104e4610d8c565b5b6040519080825280602002602001820160405280156105135781602001602082028036833780820191505090505b506000908051906020019061052992919061094e565b5050565b674563918244f4000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105fc576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561067f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610635575b5050505050905060005b8151811015610704576000600160008484815181106106ab576106aa610c33565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806106fc90610c91565b915050610689565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161072b90610d0b565b60006040518083038185875af1925050503d8060008114610768576040519150601f19603f3d011682016040523d82523d6000602084013e61076d565b606091505b50509050806107b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a890610d6c565b60405180910390fd5b600067ffffffffffffffff8111156107cc576107cb610d8c565b5b6040519080825280602002602001820160405280156107fa5781602001602082028036833780820191505090505b506000908051906020019061081092919061094e565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061084957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610884836108ae565b9050670de0b6b3a7640000848261089b9190610dbb565b6108a59190610e44565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108f757600080fd5b505afa15801561090b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092f9190610f02565b5050509150506402540be400816109469190610f7d565b915050919050565b8280548282559060005260206000209081019282156109c7579160200282015b828111156109c65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061096e565b5b5090506109d491906109d8565b5090565b5b808211156109f15760008160009055506001016109d9565b5090565b6000819050919050565b610a08816109f5565b82525050565b6000602082019050610a2360008301846109ff565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a6e610a69610a6484610a29565b610a49565b610a29565b9050919050565b6000610a8082610a53565b9050919050565b6000610a9282610a75565b9050919050565b610aa281610a87565b82525050565b6000602082019050610abd6000830184610a99565b92915050565b600080fd5b6000610ad382610a29565b9050919050565b610ae381610ac8565b8114610aee57600080fd5b50565b600081359050610b0081610ada565b92915050565b600060208284031215610b1c57610b1b610ac3565b5b6000610b2a84828501610af1565b91505092915050565b610b3c81610ac8565b82525050565b6000602082019050610b576000830184610b33565b92915050565b610b66816109f5565b8114610b7157600080fd5b50565b600081359050610b8381610b5d565b92915050565b600060208284031215610b9f57610b9e610ac3565b5b6000610bad84828501610b74565b91505092915050565b600082825260208201905092915050565b7f44696427742073656e6420656e6f756768210000000000000000000000000000600082015250565b6000610bfd601283610bb6565b9150610c0882610bc7565b602082019050919050565b60006020820190508181036000830152610c2c81610bf0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c9c826109f5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ccf57610cce610c62565b5b600182019050919050565b600081905092915050565b50565b6000610cf5600083610cda565b9150610d0082610ce5565b600082019050919050565b6000610d1682610ce8565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d56600b83610bb6565b9150610d6182610d20565b602082019050919050565b60006020820190508181036000830152610d8581610d49565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000610dc6826109f5565b9150610dd1836109f5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e0a57610e09610c62565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e4f826109f5565b9150610e5a836109f5565b925082610e6a57610e69610e15565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e9481610e75565b8114610e9f57600080fd5b50565b600081519050610eb181610e8b565b92915050565b6000819050919050565b610eca81610eb7565b8114610ed557600080fd5b50565b600081519050610ee781610ec1565b92915050565b600081519050610efc81610b5d565b92915050565b600080600080600060a08688031215610f1e57610f1d610ac3565b5b6000610f2c88828901610ea2565b9550506020610f3d88828901610ed8565b9450506040610f4e88828901610eed565b9350506060610f5f88828901610eed565b9250506080610f7088828901610ea2565b9150509295509295909350565b6000610f8882610eb7565b9150610f9383610eb7565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fd257610fd1610c62565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561100f5761100e610c62565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561104c5761104b610c62565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561108957611088610c62565b5b82820290509291505056fea2646970667358221220103aef113742ec959484155372ed638317affc36b6619d32a638b0469750385864736f6c63430008080033",
    "devdoc": {
        "author": "Manish Sahu",
        "details": "This implements price feeds as library",
        "kind": "dev",
        "methods": {},
        "title": "A contract for crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {},
        "notice": "This contract is to show demo for collect crowd funding",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 65,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 69,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "addressToAmountFunders",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 72,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
